/*
* 数组的常见方法，详见array.js
*/

1、数组的创建
	数组对象用于在单个变量中存储多个值。
	new Array();
	new Array(size);
	new Array(ele0, ele1,..., elen);


2、数组对象的属性
	constructor: 返回对创建此对象的数组函数的引用
	length: 设置或返回数组中元素的数目
	prototype: 向对象添加属性和方法


3、数组的方法
	##：栈方法 push()和pop()
		push()：向数组的末尾添加一个或更多元素，并返回新的长度
		pop(): 删除并返回数组的最后一个元素

	##：队列方法 unshift()和shift()
		unshift(): 向数组的开头添加一个或更多元素，并返回新的长度
		shift(): 删除并返回数组的第一个元素

	##：排序方法 reserve()和sort()
		reserve(): 颠倒数组中元素的顺序
		sort(): 对数组的元素进行排序

	##：操作方法 join()、cancat()、slice()和splice()
		join(): 把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔
		concat(): 连接两个或多个数组
		splice(): 删除元素，并向数组添加新元素
		slice(): 从已有的数组中返回选定的元素

	##：位置方法 indexOf()和lastIndexOf()
		indexOf(): 从前往后找，返回找到的第一个该元素的下标
		lastIndexOf(): 从后往前找，返回第一个找到的该元素的下标

	##：迭代方法 every()、filter()、forEach()、map()和some()
		every(): 检测数组所有元素是否都符合指定条件，只要有一个不满足，返回false。所有都满足返回true
		filter()：创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素
		forEach()：调用数组的每个元素，并将元素传递给回调函数
		map()：返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值
		some()：检测数组中的元素是否满足指定条件，只要有一个满足，返回true，没有满足的返回false

	##：规定方法 reduce()和reduceRight()
		reduce()：接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值
		reduceRight()：将数组元素计算为一个值（从右到左），和reduce()相反

	##：其他方法
		copyWithin()：从数组的指定位置拷贝元素到数组的另一个指定位置中（不建议，浏览器版本要求较高）
		fill()：使用固定值填充数组（不建议，浏览器版本要求较高）
		find()：返回通过测试（函数内判断）的数组的第一个元素的值（不建议，浏览器版本要求较高）

		valueOf()：返回数组对象的原始值